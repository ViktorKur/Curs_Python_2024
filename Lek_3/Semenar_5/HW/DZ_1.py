# Задание 1. Поиск элемента
# Пользователь вводит искомый ключ. Если он хочет, то может ввести
# максимальную глубину — уровень, до которого будет просматриваться
# структура.
# Напишите функцию, которая находит заданный пользователем ключ в словаре
# и выдаёт значение этого ключа на экран. По умолчанию уровень не задан. В
# качестве примера можно использовать такой словарь:
# site = {'html': {'head': {'title': 'Мой сайт'},'body': {'h2': 'Здесь будет мой заголовок','div': 'Тут, наверное, какой-то блок', 'p': 'А вот здесь новый абзац'}}}
# Пример 1
# Введите искомый ключ: head
# Хотите ввести максимальную глубину? Y/N: n
# Значение ключа: {'title': 'Мой сайт'}
# Пример 2
# Введите искомый ключ: head
# Хотите ввести максимальную глубину? Y/N: y
# Введите максимальную глубину: 1
# Значение ключа: None


# Мой вариант решения



# # # # # Эталонное решение
#  ##Функция для поиска ключа в словаре с учётом глубины поиска
# def find_key(struct, key, max_depth=None, depth=1):
#   result = None # Переменная для хранения найденного значения
#   # Если указана максимальная глубина и текущая глубина превышает её, прекращаем поиск
#   if max_depth and max_depth < depth:
#     return result
#   # Если ключ найден в текущем уровне словаря, возвращаем его  значение
#   if key in struct:
#     return struct[key]
#   # Рекурсивный поиск по вложенным словарям
#   for sub_struct in struct.values():
#     if isinstance(sub_struct, dict):
#       result = find_key(sub_struct, key, max_depth, depth=depth + 1)
#       if result:
#         break
#   return result
# # Пример словаря с вложенными структурами
# site = {'html': {'head': {'title': 'Мой сайт'},'body': {'h2': 'Здесь будет мой заголовок','div': 'Тут, наверное, какой-то блок','p': 'А вот здесь новый абзац'}}}
# while True:
#   key = input('Введите искомый ключ: ') # Запрашиваем ключ у пользователя
#   answer = input('Хотите ввести максимальную глубину? Y/N: ') # Проверяем, хочет ли пользователь ограничить глубину поиска
#   if answer.lower() == 'y':
#     max_depth = int(input('Введите максимальную глубину: ')) #Если да, запрашиваем максимальную глубину
#   else:
#     max_depth = None # Если нет, устанавливаем максимальнуюглубину как None
#   # Выводим найденное значение ключа или None, если ключ не найден
#   print('Значение ключа:', find_key(struct=site,max_depth=max_depth, key=key))
